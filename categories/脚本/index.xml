<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>脚本 on opstecwang</title>
    <link>http://opstecwang.github.io/categories/%E8%84%9A%E6%9C%AC/</link>
    <description>Recent content in 脚本 on opstecwang</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Mon, 07 Jun 2021 10:10:00 +0800</lastBuildDate><atom:link href="http://opstecwang.github.io/categories/%E8%84%9A%E6%9C%AC/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Shell | 防止SSH暴力破解</title>
      <link>http://opstecwang.github.io/post/shell-%E9%98%B2%E6%AD%A2ssh%E6%9A%B4%E5%8A%9B%E7%A0%B4%E8%A7%A3/</link>
      <pubDate>Mon, 07 Jun 2021 10:10:00 +0800</pubDate>
      
      <guid>http://opstecwang.github.io/post/shell-%E9%98%B2%E6%AD%A2ssh%E6%9A%B4%E5%8A%9B%E7%A0%B4%E8%A7%A3/</guid>
      <description>1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20  #! /bin/bash # name:ssh_deny.sh cat /var/log/secure | awk &amp;#39;/Failed/ {print $(NF-3)}&amp;#39; | sort | uniq -c | awk &amp;#39;{print $2&amp;#34;=&amp;#34;$1}&amp;#39; &amp;gt; /root/black.txt DEFINE=&amp;#34;100&amp;#34; for i in `cat /root/black.txt` do IP=`echo $i | awk -F= &amp;#39;{print $1}&amp;#39;` NUM=`echo $i | awk -F= &amp;#39;{print $2}&amp;#39;` if [ $NUM -gt $DEFINE ]; then grep $IP /etc/hosts.</description>
    </item>
    
    <item>
      <title>Shell | 实时查看网络流量</title>
      <link>http://opstecwang.github.io/post/shell-%E5%AE%9E%E6%97%B6%E6%9F%A5%E7%9C%8B%E7%BD%91%E7%BB%9C%E6%B5%81%E9%87%8F/</link>
      <pubDate>Mon, 07 Jun 2021 10:00:00 +0800</pubDate>
      
      <guid>http://opstecwang.github.io/post/shell-%E5%AE%9E%E6%97%B6%E6%9F%A5%E7%9C%8B%E7%BD%91%E7%BB%9C%E6%B5%81%E9%87%8F/</guid>
      <description>可以实时查看指定网卡流量
用法： bash RT-Traffic.sh eth0
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35  #!/bin/bash # shellname: RT-Traffic.sh while [ &amp;#34;1&amp;#34; ] do eth=$1 RXpre=$(cat /proc/net/dev | grep $eth | tr : &amp;#34; &amp;#34; | awk &amp;#39;{print $2}&amp;#39;) TXpre=$(cat /proc/net/dev | grep $eth | tr : &amp;#34; &amp;#34; | awk &amp;#39;{print $10}&amp;#39;) sleep 1 RXnext=$(cat /proc/net/dev | grep $eth | tr : &amp;#34; &amp;#34; | awk &amp;#39;{print $2}&amp;#39;) TXnext=$(cat /proc/net/dev | grep $eth | tr : &amp;#34; &amp;#34; | awk &amp;#39;{print $10}&amp;#39;) clear echo -e &amp;#34;\t RX `date +%k:%M:%S` TX&amp;#34; RX=$((${RXnext}-${RXpre})) TX=$((${TXnext}-${TXpre})) if [[ $RX -lt 1024 ]];then RX=&amp;#34;${RX}B/s&amp;#34; elif [[ $RX -gt 1048576 ]];then RX=$(echo $RX | awk &amp;#39;{print $1/1048576 &amp;#34;MB/s&amp;#34;}&amp;#39;) else RX=$(echo $RX | awk &amp;#39;{print $1/1024 &amp;#34;KB/s&amp;#34;}&amp;#39;) fi if [[ $TX -lt 1024 ]];then TX=&amp;#34;${TX}B/s&amp;#34; elif [[ $TX -gt 1048576 ]];then TX=$(echo $TX | awk &amp;#39;{print $1/1048576 &amp;#34;MB/s&amp;#34;}&amp;#39;) else TX=$(echo $TX | awk &amp;#39;{print $1/1024 &amp;#34;KB/s&amp;#34;}&amp;#39;) fi echo -e &amp;#34;$eth\t $RX$TX&amp;#34; done   </description>
    </item>
    
    <item>
      <title>Shell | 差异备份</title>
      <link>http://opstecwang.github.io/post/shell-%E5%B7%AE%E5%BC%82%E5%A4%87%E4%BB%BD/</link>
      <pubDate>Sun, 06 Jun 2021 21:10:00 +0800</pubDate>
      
      <guid>http://opstecwang.github.io/post/shell-%E5%B7%AE%E5%BC%82%E5%A4%87%E4%BB%BD/</guid>
      <description>1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87  #!</description>
    </item>
    
  </channel>
</rss>
